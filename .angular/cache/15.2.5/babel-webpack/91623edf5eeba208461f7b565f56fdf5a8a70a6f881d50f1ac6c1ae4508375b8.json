{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { HomeComponent } from './home';\nimport { AuthGuard } from './_helpers';\nimport { Role } from './_models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst accountModule = () => import('./account/account.module').then(x => x.AccountModule);\nconst adminModule = () => import('./admin/admin.module').then(x => x.AdminModule);\nconst profileModule = () => import('./profile/profile.module').then(x => x.ProfileModule);\nconst routes = [{\n  path: '',\n  component: HomeComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'account',\n  loadChildren: accountModule\n}, {\n  path: 'profile',\n  loadChildren: profileModule,\n  canActivate: [AuthGuard]\n}, {\n  path: 'admin',\n  loadChildren: adminModule,\n  canActivate: [AuthGuard],\n  data: {\n    roles: [Role.Admin]\n  }\n},\n// otherwise redirect to home\n{\n  path: '**',\n  redirectTo: ''\n}];\nexport class AppRoutingModule {}\nAppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n  return new (t || AppRoutingModule)();\n};\nAppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppRoutingModule\n});\nAppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [RouterModule.forRoot(routes), RouterModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"mappings":"AACA,SAAiBA,YAAY,QAAQ,iBAAiB;AAEtD,SAASC,aAAa,QAAQ,QAAQ;AACtC,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,IAAI,QAAQ,WAAW;;;AAEhC,MAAMC,aAAa,GAAG,MAAM,MAAM,CAAC,0BAA0B,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,aAAa,CAAC;AACzF,MAAMC,WAAW,GAAG,MAAM,MAAM,CAAC,sBAAsB,CAAC,CAACH,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACG,WAAW,CAAC;AACjF,MAAMC,aAAa,GAAG,MAAM,MAAM,CAAC,0BAA0B,CAAC,CAACL,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACK,aAAa,CAAC;AAEzF,MAAMC,MAAM,GAAW,CACnB;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAEb,aAAa;EAAEc,WAAW,EAAE,CAACb,SAAS;AAAC,CAAE,EAChE;EAAEW,IAAI,EAAE,SAAS;EAAEG,YAAY,EAAEZ;AAAa,CAAE,EAChD;EAAES,IAAI,EAAE,SAAS;EAAEG,YAAY,EAAEN,aAAa;EAAEK,WAAW,EAAE,CAACb,SAAS;AAAC,CAAE,EAC1E;EAAEW,IAAI,EAAE,OAAO;EAAEG,YAAY,EAAER,WAAW;EAAEO,WAAW,EAAE,CAACb,SAAS,CAAC;EAAEe,IAAI,EAAE;IAAEC,KAAK,EAAE,CAACf,IAAI,CAACgB,KAAK;EAAC;AAAE,CAAE;AAErG;AACA;EAAEN,IAAI,EAAE,IAAI;EAAEO,UAAU,EAAE;AAAE,CAAE,CACjC;AAMD,OAAM,MAAOC,gBAAgB;;mBAAhBA,gBAAgB;AAAA;;QAAhBA;AAAgB;;YAHfrB,YAAY,CAACsB,OAAO,CAACV,MAAM,CAAC,EAC5BZ,YAAY;AAAA;;2EAEbqB,gBAAgB;IAAAE;IAAAC,UAFfxB,YAAY;EAAA;AAAA","names":["RouterModule","HomeComponent","AuthGuard","Role","accountModule","then","x","AccountModule","adminModule","AdminModule","profileModule","ProfileModule","routes","path","component","canActivate","loadChildren","data","roles","Admin","redirectTo","AppRoutingModule","forRoot","imports","exports"],"sourceRoot":"","sources":["D:\\boilerplates\\angularfrontend-main\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home';\nimport { AuthGuard } from './_helpers';\nimport { Role } from './_models';\n\nconst accountModule = () => import('./account/account.module').then(x => x.AccountModule);\nconst adminModule = () => import('./admin/admin.module').then(x => x.AdminModule);\nconst profileModule = () => import('./profile/profile.module').then(x => x.ProfileModule);\n\nconst routes: Routes = [\n    { path: '', component: HomeComponent, canActivate: [AuthGuard] },\n    { path: 'account', loadChildren: accountModule },\n    { path: 'profile', loadChildren: profileModule, canActivate: [AuthGuard] },\n    { path: 'admin', loadChildren: adminModule, canActivate: [AuthGuard], data: { roles: [Role.Admin] } },\n\n    // otherwise redirect to home\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}