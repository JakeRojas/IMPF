{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@app/_services\";\nimport * as i3 from \"@angular/common\";\nfunction VerifyEmailComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Verifying... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VerifyEmailComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Verification failed, you can also verify your account using the \");\n    i0.ɵɵelementStart(2, \"a\", 3);\n    i0.ɵɵtext(3, \"forgot password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" page. \");\n    i0.ɵɵelementEnd();\n  }\n}\nvar EmailStatus;\n(function (EmailStatus) {\n  EmailStatus[EmailStatus[\"Verifying\"] = 0] = \"Verifying\";\n  EmailStatus[EmailStatus[\"Failed\"] = 1] = \"Failed\";\n})(EmailStatus || (EmailStatus = {}));\nexport class VerifyEmailComponent {\n  constructor(route, router, accountService, alertService) {\n    this.route = route;\n    this.router = router;\n    this.accountService = accountService;\n    this.alertService = alertService;\n    this.EmailStatus = EmailStatus;\n    this.emailStatus = EmailStatus.Verifying;\n  }\n  ngOnInit() {\n    const token = this.route.snapshot.queryParams['token'];\n    // remove token from url to prevent http referer leakage\n    this.router.navigate([], {\n      relativeTo: this.route,\n      replaceUrl: true\n    });\n    this.accountService.verifyEmail(token).pipe(first()).subscribe({\n      next: () => {\n        this.alertService.success('Verification successful, you can now login', {\n          keepAfterRouteChange: true\n        });\n        this.router.navigate(['../login'], {\n          relativeTo: this.route\n        });\n      },\n      error: () => {\n        this.emailStatus = EmailStatus.Failed;\n      }\n    });\n  }\n}\nVerifyEmailComponent.ɵfac = function VerifyEmailComponent_Factory(t) {\n  return new (t || VerifyEmailComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i2.AlertService));\n};\nVerifyEmailComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VerifyEmailComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[1, \"card-header\"], [1, \"card-body\"], [4, \"ngIf\"], [\"routerLink\", \"forgot-password\"]],\n  template: function VerifyEmailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\", 0);\n      i0.ɵɵtext(1, \"Verify Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵtemplate(3, VerifyEmailComponent_div_3_Template, 2, 0, \"div\", 2);\n      i0.ɵɵtemplate(4, VerifyEmailComponent_div_4_Template, 5, 0, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.emailStatus == ctx.EmailStatus.Verifying);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.emailStatus == ctx.EmailStatus.Failed);\n    }\n  },\n  dependencies: [i3.NgIf, i1.RouterLink],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAEA,SAASA,KAAK,QAAQ,gBAAgB;;;;;;;ICAlCC,2BAAkD;IAC9CA,8BACJ;IAAAA,iBAAM;;;;;IACNA,2BAA+C;IAC3CA,iFAAgE;IAAAA,4BAAgC;IAAAA,+BAAe;IAAAA,iBAAI;IAACA,uBACxH;IAAAA,iBAAM;;;ADDV,IAAKC,WAGJ;AAHD,WAAKA,WAAW;EACZA,uDAAS;EACTA,iDAAM;AACV,CAAC,EAHIA,WAAW,KAAXA,WAAW;AAMhB,OAAM,MAAOC,oBAAoB;EAI7BC,YACYC,KAAqB,EACrBC,MAAc,EACdC,cAA8B,EAC9BC,YAA0B;IAH1B,UAAK,GAALH,KAAK;IACL,WAAM,GAANC,MAAM;IACN,mBAAc,GAAdC,cAAc;IACd,iBAAY,GAAZC,YAAY;IAPxB,gBAAW,GAAGN,WAAW;IACzB,gBAAW,GAAGA,WAAW,CAACO,SAAS;EAO/B;EAEJC,QAAQ;IACJ,MAAMC,KAAK,GAAG,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACC,WAAW,CAAC,OAAO,CAAC;IAEtD;IACA,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,EAAE,EAAE;MAAEC,UAAU,EAAE,IAAI,CAACV,KAAK;MAAEW,UAAU,EAAE;IAAI,CAAE,CAAC;IAEtE,IAAI,CAACT,cAAc,CAACU,WAAW,CAACN,KAAK,CAAC,CACjCO,IAAI,CAAClB,KAAK,EAAE,CAAC,CACbmB,SAAS,CAAC;MACPC,IAAI,EAAE,MAAK;QACP,IAAI,CAACZ,YAAY,CAACa,OAAO,CAAC,4CAA4C,EAAE;UAAEC,oBAAoB,EAAE;QAAI,CAAE,CAAC;QACvG,IAAI,CAAChB,MAAM,CAACQ,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE;UAAEC,UAAU,EAAE,IAAI,CAACV;QAAK,CAAE,CAAC;MAClE,CAAC;MACDkB,KAAK,EAAE,MAAK;QACR,IAAI,CAACC,WAAW,GAAGtB,WAAW,CAACuB,MAAM;MACzC;KACH,CAAC;EACV;;;mBA5BStB,oBAAoB;AAAA;;QAApBA,oBAAoB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZjC7B,6BAAwB;MAAAA,4BAAY;MAAAA,iBAAK;MACzCA,8BAAuB;MACnBA,qEAEM;MACNA,qEAEM;MACVA,iBAAM;;;MANIA,eAA0C;MAA1CA,mEAA0C;MAG1CA,eAAuC;MAAvCA,gEAAuC","names":["first","i0","EmailStatus","VerifyEmailComponent","constructor","route","router","accountService","alertService","Verifying","ngOnInit","token","snapshot","queryParams","navigate","relativeTo","replaceUrl","verifyEmail","pipe","subscribe","next","success","keepAfterRouteChange","error","emailStatus","Failed","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\boilerplates\\angularfrontend-main\\src\\app\\account\\verify-email.component.ts","D:\\boilerplates\\angularfrontend-main\\src\\app\\account\\verify-email.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '@app/_services';\n\nenum EmailStatus {\n    Verifying,\n    Failed\n}\n\n@Component({ templateUrl: 'verify-email.component.html' })\nexport class VerifyEmailComponent implements OnInit {\n    EmailStatus = EmailStatus;\n    emailStatus = EmailStatus.Verifying;\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit() {\n        const token = this.route.snapshot.queryParams['token'];\n\n        // remove token from url to prevent http referer leakage\n        this.router.navigate([], { relativeTo: this.route, replaceUrl: true });\n\n        this.accountService.verifyEmail(token)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    this.alertService.success('Verification successful, you can now login', { keepAfterRouteChange: true });\n                    this.router.navigate(['../login'], { relativeTo: this.route });\n                },\n                error: () => {\n                    this.emailStatus = EmailStatus.Failed;\n                }\n            });\n    }\n}","<h3 class=\"card-header\">Verify Email</h3>\n<div class=\"card-body\">\n    <div *ngIf=\"emailStatus == EmailStatus.Verifying\">\n        Verifying...\n    </div>\n    <div *ngIf=\"emailStatus == EmailStatus.Failed\">\n        Verification failed, you can also verify your account using the <a routerLink=\"forgot-password\">forgot password</a> page.\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}