{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { MustMatch } from '@app/_helpers';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nfunction AddEditComponent_form_2_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_form_2_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, AddEditComponent_form_2_div_15_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.title.errors.required);\n  }\n}\nfunction AddEditComponent_form_2_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"First Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_form_2_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, AddEditComponent_form_2_div_20_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.firstName.errors.required);\n  }\n}\nfunction AddEditComponent_form_2_div_25_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Last Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_form_2_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, AddEditComponent_form_2_div_25_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f.lastName.errors.required);\n  }\n}\nfunction AddEditComponent_form_2_div_31_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_form_2_div_31_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email must be a valid email address\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_form_2_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, AddEditComponent_form_2_div_31_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵtemplate(2, AddEditComponent_form_2_div_31_div_2_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f.email.errors.email);\n  }\n}\nfunction AddEditComponent_form_2_div_41_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Role is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_form_2_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, AddEditComponent_form_2_div_41_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.f.role.errors.required);\n  }\n}\nfunction AddEditComponent_form_2_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\", 30);\n    i0.ɵɵtext(2, \"Change Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"Leave blank to keep the same password\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddEditComponent_form_2_div_48_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_form_2_div_48_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_form_2_div_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, AddEditComponent_form_2_div_48_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵtemplate(2, AddEditComponent_form_2_div_48_div_2_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.f.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.f.password.errors.minlength);\n  }\n}\nfunction AddEditComponent_form_2_div_53_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Confirm Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_form_2_div_53_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Passwords must match\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_form_2_div_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, AddEditComponent_form_2_div_53_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵtemplate(2, AddEditComponent_form_2_div_53_div_2_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.f.confirmPassword.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.f.confirmPassword.errors.mustMatch);\n  }\n}\nfunction AddEditComponent_form_2_span_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 31);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nfunction AddEditComponent_form_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 2);\n    i0.ɵɵlistener(\"ngSubmit\", function AddEditComponent_form_2_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 3)(2, \"div\", 4)(3, \"label\", 5);\n    i0.ɵɵtext(4, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"select\", 6);\n    i0.ɵɵelement(6, \"option\", 7);\n    i0.ɵɵelementStart(7, \"option\", 8);\n    i0.ɵɵtext(8, \"Mr\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"option\", 9);\n    i0.ɵɵtext(10, \"Mrs\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"option\", 10);\n    i0.ɵɵtext(12, \"Miss\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"option\", 11);\n    i0.ɵɵtext(14, \"Ms\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(15, AddEditComponent_form_2_div_15_Template, 2, 1, \"div\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 13)(17, \"label\", 5);\n    i0.ɵɵtext(18, \"First Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(19, \"input\", 14);\n    i0.ɵɵtemplate(20, AddEditComponent_form_2_div_20_Template, 2, 1, \"div\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 13)(22, \"label\", 5);\n    i0.ɵɵtext(23, \"Last Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(24, \"input\", 15);\n    i0.ɵɵtemplate(25, AddEditComponent_form_2_div_25_Template, 2, 1, \"div\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"div\", 3)(27, \"div\", 16)(28, \"label\", 5);\n    i0.ɵɵtext(29, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(30, \"input\", 17);\n    i0.ɵɵtemplate(31, AddEditComponent_form_2_div_31_Template, 3, 2, \"div\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"div\", 13)(33, \"label\", 5);\n    i0.ɵɵtext(34, \"Role\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"select\", 18);\n    i0.ɵɵelement(36, \"option\", 7);\n    i0.ɵɵelementStart(37, \"option\", 19);\n    i0.ɵɵtext(38, \"User\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"option\", 20);\n    i0.ɵɵtext(40, \"Admin\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(41, AddEditComponent_form_2_div_41_Template, 2, 1, \"div\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(42, AddEditComponent_form_2_div_42_Template, 5, 0, \"div\", 21);\n    i0.ɵɵelementStart(43, \"div\", 3)(44, \"div\", 22)(45, \"label\", 5);\n    i0.ɵɵtext(46, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(47, \"input\", 23);\n    i0.ɵɵtemplate(48, AddEditComponent_form_2_div_48_Template, 3, 2, \"div\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(49, \"div\", 22)(50, \"label\", 5);\n    i0.ɵɵtext(51, \"Confirm Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(52, \"input\", 24);\n    i0.ɵɵtemplate(53, AddEditComponent_form_2_div_53_Template, 3, 2, \"div\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(54, \"div\", 25)(55, \"button\", 26);\n    i0.ɵɵtemplate(56, AddEditComponent_form_2_span_56_Template, 1, 0, \"span\", 27);\n    i0.ɵɵtext(57, \" Save \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(58, \"a\", 28);\n    i0.ɵɵtext(59, \"Cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(18, _c0, ctx_r0.submitted && ctx_r0.f.title.errors));\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.submitted && ctx_r0.f.title.errors);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(20, _c0, ctx_r0.submitted && ctx_r0.f.firstName.errors));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.submitted && ctx_r0.f.firstName.errors);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(22, _c0, ctx_r0.submitted && ctx_r0.f.lastName.errors));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.submitted && ctx_r0.f.lastName.errors);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(24, _c0, ctx_r0.submitted && ctx_r0.f.email.errors));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.submitted && ctx_r0.f.email.errors);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(26, _c0, ctx_r0.submitted && ctx_r0.f.role.errors));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.submitted && ctx_r0.f.role.errors);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.AccountId);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(28, _c0, ctx_r0.submitted && ctx_r0.f.password.errors));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.submitted && ctx_r0.f.password.errors);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(30, _c0, ctx_r0.submitted && ctx_r0.f.confirmPassword.errors));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.submitted && ctx_r0.f.confirmPassword.errors);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.submitting);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.submitting);\n  }\n}\nfunction AddEditComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵelement(1, \"span\", 33);\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddEditComponent {\n  constructor(formBuilder, route, router, accountService, alertService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.accountService = accountService;\n    this.alertService = alertService;\n    this.loading = false;\n    this.submitting = false;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.AccountId = this.route.snapshot.params['AccountId'];\n    this.form = this.formBuilder.group({\n      title: ['', Validators.required],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      role: ['', Validators.required],\n      // password only required in add mode\n      password: ['', [Validators.minLength(6), ...(!this.AccountId ? [Validators.required] : [])]],\n      confirmPassword: ['']\n    }, {\n      validator: MustMatch('password', 'confirmPassword')\n    });\n    this.title = 'Create Account';\n    if (this.AccountId) {\n      // edit mode\n      this.title = 'Edit Account';\n      this.loading = true;\n      this.accountService.getById(this.AccountId).pipe(first()).subscribe(x => {\n        this.form.patchValue(x);\n        this.loading = false;\n      });\n    }\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // reset alerts on submit\n    this.alertService.clear();\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    this.submitting = true;\n    // create or update account based on id param\n    let saveAccount;\n    let message;\n    if (this.AccountId) {\n      saveAccount = () => this.accountService.update(this.AccountId, this.form.value);\n      message = 'Account updated';\n    } else {\n      saveAccount = () => this.accountService.create(this.form.value);\n      message = 'Account created';\n    }\n    saveAccount().pipe(first()).subscribe({\n      next: () => {\n        this.alertService.success(message, {\n          keepAfterRouteChange: true\n        });\n        this.router.navigateByUrl('/admin/accounts');\n      },\n      error: error => {\n        this.alertService.error(error);\n        this.submitting = false;\n      }\n    });\n  }\n}\nAddEditComponent.ɵfac = function AddEditComponent_Factory(t) {\n  return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i3.AlertService));\n};\nAddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddEditComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 4,\n  vars: 3,\n  consts: [[3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"class\", \"text-center m-5\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"mb-3\", \"col-2\"], [1, \"form-label\"], [\"formControlName\", \"title\", 1, \"form-select\", 3, \"ngClass\"], [\"value\", \"\"], [\"value\", \"Mr\"], [\"value\", \"Mrs\"], [\"value\", \"Miss\"], [\"value\", \"Ms\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"mb-3\", \"col-5\"], [\"type\", \"text\", \"formControlName\", \"firstName\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"text\", \"formControlName\", \"lastName\", 1, \"form-control\", 3, \"ngClass\"], [1, \"mb-3\", \"col-7\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [\"formControlName\", \"role\", 1, \"form-select\", 3, \"ngClass\"], [\"value\", \"User\"], [\"value\", \"Admin\"], [4, \"ngIf\"], [1, \"mb-3\", \"col\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\", 1, \"form-control\", 3, \"ngClass\"], [1, \"mb-3\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"routerLink\", \"/admin/accounts\", 1, \"btn\", \"btn-link\"], [1, \"invalid-feedback\"], [1, \"pt-3\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"], [1, \"text-center\", \"m-5\"], [1, \"spinner-border\", \"spinner-border-lg\", \"align-center\"]],\n  template: function AddEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, AddEditComponent_form_2_Template, 60, 32, \"form\", 0);\n      i0.ɵɵtemplate(3, AddEditComponent_div_3_Template, 2, 0, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","first","MustMatch","i0","AddEditComponent","constructor","formBuilder","route","router","accountService","alertService","ngOnInit","AccountId","snapshot","params","form","group","title","required","firstName","lastName","email","role","password","minLength","confirmPassword","validator","loading","getById","pipe","subscribe","x","patchValue","f","controls","onSubmit","submitted","clear","invalid","submitting","saveAccount","message","update","value","create","next","success","keepAfterRouteChange","navigateByUrl","error","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\boilerplates\\angularFrontendBoilerplate\\src\\app\\admin\\accounts\\add-edit.component.ts","D:\\boilerplates\\angularFrontendBoilerplate\\src\\app\\admin\\accounts\\add-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '@app/_services';\nimport { MustMatch } from '@app/_helpers';\n\n@Component({ templateUrl: 'add-edit.component.html' })\nexport class AddEditComponent implements OnInit {\n    form!: FormGroup;\n    AccountId?: string;\n    title!: string;\n    loading = false;\n    submitting = false;\n    submitted = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit() {\n        this.AccountId = this.route.snapshot.params['AccountId'];\n\n        this.form = this.formBuilder.group({\n            title: ['', Validators.required],\n            firstName: ['', Validators.required],\n            lastName: ['', Validators.required],\n            email: ['', [Validators.required, Validators.email]],\n            role: ['', Validators.required],\n            // password only required in add mode\n            password: ['', [Validators.minLength(6), ...(!this.AccountId ? [Validators.required] : [])]],\n            confirmPassword: ['']\n        }, {\n            validator: MustMatch('password', 'confirmPassword')\n        });\n\n        this.title = 'Create Account';\n        if (this.AccountId) {\n            // edit mode\n            this.title = 'Edit Account';\n            this.loading = true;\n            this.accountService.getById(this.AccountId)\n                .pipe(first())\n                .subscribe(x => {\n                    this.form.patchValue(x);\n                    this.loading = false;\n                });\n        }\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.submitting = true;\n\n        // create or update account based on id param\n        let saveAccount;\n        let message: string;\n        if (this.AccountId) {\n            saveAccount = () => this.accountService.update(this.AccountId!, this.form.value);\n            message = 'Account updated';\n        } else {\n            saveAccount = () => this.accountService.create(this.form.value);\n            message = 'Account created';\n        }\n\n        saveAccount()\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    this.alertService.success(message, { keepAfterRouteChange: true });\n                    this.router.navigateByUrl('/admin/accounts');\n                },\n                error: error => {\n                    this.alertService.error(error);\n                    this.submitting = false;\n                }\n            });\n    }\n}","<h1>{{title}}</h1>\n<form *ngIf=\"!loading\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"row\">\n        <div class=\"mb-3 col-2\">\n            <label class=\"form-label\">Title</label>\n            <select formControlName=\"title\" class=\"form-select\" [ngClass]=\"{ 'is-invalid': submitted && f.title.errors }\">\n                <option value=\"\"></option>\n                <option value=\"Mr\">Mr</option>\n                <option value=\"Mrs\">Mrs</option>\n                <option value=\"Miss\">Miss</option>\n                <option value=\"Ms\">Ms</option>\n            </select>\n            <div *ngIf=\"submitted && f.title.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.title.errors.required\">Title is required</div>\n            </div>\n        </div>\n        <div class=\"mb-3 col-5\">\n            <label class=\"form-label\">First Name</label>\n            <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n            <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n            </div>\n        </div>\n        <div class=\"mb-3 col-5\">\n            <label class=\"form-label\">Last Name</label>\n            <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n            <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"mb-3 col-7\">\n            <label class=\"form-label\">Email</label>\n            <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n            </div>\n        </div>\n        <div class=\"mb-3 col-5\">\n            <label class=\"form-label\">Role</label>\n            <select formControlName=\"role\" class=\"form-select\" [ngClass]=\"{ 'is-invalid': submitted && f.role.errors }\">\n                <option value=\"\"></option>\n                <option value=\"User\">User</option>\n                <option value=\"Admin\">Admin</option>\n            </select>\n            <div *ngIf=\"submitted && f.role.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.role.errors.required\">Role is required</div>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"AccountId\">\n        <h3 class=\"pt-3\">Change Password</h3>\n        <p>Leave blank to keep the same password</p>\n    </div>\n    <div class=\"row\">\n        <div class=\"mb-3 col\">\n            <label class=\"form-label\">Password</label>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n            </div>\n        </div>\n        <div class=\"mb-3 col\">\n            <label class=\"form-label\">Confirm Password</label>\n            <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\n            <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\n                <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"mb-3\">\n        <button [disabled]=\"submitting\" class=\"btn btn-primary\">\n            <span *ngIf=\"submitting\" class=\"spinner-border spinner-border-sm me-1\"></span>\n            Save\n        </button>\n        <a routerLink=\"/admin/accounts\" class=\"btn btn-link\">Cancel</a>\n    </div>\n</form>\n<div *ngIf=\"loading\" class=\"text-center m-5\">\n    <span class=\"spinner-border spinner-border-lg align-center\"></span>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}