{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { MustMatch } from '@app/_helpers';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nfunction RegisterComponent_div_18_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, RegisterComponent_div_18_div_1_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.title.errors.required);\n  }\n}\nfunction RegisterComponent_div_23_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"First Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, RegisterComponent_div_23_div_1_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.firstName.errors.required);\n  }\n}\nfunction RegisterComponent_div_28_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Last Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, RegisterComponent_div_28_div_1_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.lastName.errors.required);\n  }\n}\nfunction RegisterComponent_div_33_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_33_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email must be a valid email address\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, RegisterComponent_div_33_div_1_Template, 2, 0, \"div\", 28);\n    i0.ɵɵtemplate(2, RegisterComponent_div_33_div_2_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.email.errors.email);\n  }\n}\nfunction RegisterComponent_div_39_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_39_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, RegisterComponent_div_39_div_1_Template, 2, 0, \"div\", 28);\n    i0.ɵɵtemplate(2, RegisterComponent_div_39_div_2_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f.password.errors.minlength);\n  }\n}\nfunction RegisterComponent_div_44_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Confirm Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_44_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Passwords must match\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, RegisterComponent_div_44_div_1_Template, 2, 0, \"div\", 28);\n    i0.ɵɵtemplate(2, RegisterComponent_div_44_div_2_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f.confirmPassword.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f.confirmPassword.errors.mustMatch);\n  }\n}\nfunction RegisterComponent_div_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \"Accept Ts & Cs is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 29);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class RegisterComponent {\n  constructor(formBuilder, route, router, accountService, alertService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.accountService = accountService;\n    this.alertService = alertService;\n    this.submitting = false;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      title: ['', Validators.required],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', Validators.required],\n      acceptTerms: [false, Validators.requiredTrue]\n    }, {\n      validator: MustMatch('password', 'confirmPassword')\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // reset alerts on submit\n    this.alertService.clear();\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    this.submitting = true;\n    this.accountService.register(this.form.value).pipe(first()).subscribe({\n      next: () => {\n        this.alertService.success('Registration successful, please check your email for verification instructions', {\n          keepAfterRouteChange: true\n        });\n        this.router.navigate(['../login'], {\n          relativeTo: this.route\n        });\n      },\n      error: error => {\n        this.alertService.error(error);\n        this.submitting = false;\n      }\n    });\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i3.AlertService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 56,\n  vars: 31,\n  consts: [[1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"mb-3\", \"col-2\"], [1, \"form-label\"], [\"formControlName\", \"title\", 1, \"form-select\", 3, \"ngClass\"], [\"value\", \"\"], [\"value\", \"Mr\"], [\"value\", \"Mrs\"], [\"value\", \"Miss\"], [\"value\", \"Ms\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"mb-3\", \"col-5\"], [\"type\", \"text\", \"formControlName\", \"firstName\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"text\", \"formControlName\", \"lastName\", 1, \"form-control\", 3, \"ngClass\"], [1, \"mb-3\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [1, \"mb-3\", \"col\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\", 1, \"form-control\", 3, \"ngClass\"], [1, \"mb-3\", \"form-check\"], [\"type\", \"checkbox\", \"formControlName\", \"acceptTerms\", \"id\", \"acceptTerms\", 1, \"form-check-input\", 3, \"ngClass\"], [\"for\", \"acceptTerms\", 1, \"form-check-label\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"routerLink\", \"../login\", \"href\", \"\", 1, \"btn\", \"btn-link\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\", 0);\n      i0.ɵɵtext(1, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"select\", 6);\n      i0.ɵɵelement(9, \"option\", 7);\n      i0.ɵɵelementStart(10, \"option\", 8);\n      i0.ɵɵtext(11, \"Mr\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"option\", 9);\n      i0.ɵɵtext(13, \"Mrs\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"option\", 10);\n      i0.ɵɵtext(15, \"Miss\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"option\", 11);\n      i0.ɵɵtext(17, \"Ms\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(18, RegisterComponent_div_18_Template, 2, 1, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 13)(20, \"label\", 5);\n      i0.ɵɵtext(21, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 14);\n      i0.ɵɵtemplate(23, RegisterComponent_div_23_Template, 2, 1, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 13)(25, \"label\", 5);\n      i0.ɵɵtext(26, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 15);\n      i0.ɵɵtemplate(28, RegisterComponent_div_28_Template, 2, 1, \"div\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"div\", 16)(30, \"label\", 5);\n      i0.ɵɵtext(31, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"input\", 17);\n      i0.ɵɵtemplate(33, RegisterComponent_div_33_Template, 3, 2, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"div\", 3)(35, \"div\", 18)(36, \"label\", 5);\n      i0.ɵɵtext(37, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(38, \"input\", 19);\n      i0.ɵɵtemplate(39, RegisterComponent_div_39_Template, 3, 2, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"div\", 18)(41, \"label\", 5);\n      i0.ɵɵtext(42, \"Confirm Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(43, \"input\", 20);\n      i0.ɵɵtemplate(44, RegisterComponent_div_44_Template, 3, 2, \"div\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(45, \"div\", 21);\n      i0.ɵɵelement(46, \"input\", 22);\n      i0.ɵɵelementStart(47, \"label\", 23);\n      i0.ɵɵtext(48, \"Accept Terms & Conditions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(49, RegisterComponent_div_49_Template, 2, 0, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"div\", 16)(51, \"button\", 24);\n      i0.ɵɵtemplate(52, RegisterComponent_span_52_Template, 1, 0, \"span\", 25);\n      i0.ɵɵtext(53, \" Register \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"a\", 26);\n      i0.ɵɵtext(55, \"Cancel\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ctx.submitted && ctx.f.title.errors));\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.title.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx.submitted && ctx.f.firstName.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.firstName.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(21, _c0, ctx.submitted && ctx.f.lastName.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.lastName.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(23, _c0, ctx.submitted && ctx.f.email.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.email.errors);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(25, _c0, ctx.submitted && ctx.f.password.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.password.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(27, _c0, ctx.submitted && ctx.f.confirmPassword.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.confirmPassword.errors);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(29, _c0, ctx.submitted && ctx.f.acceptTerms.errors));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.acceptTerms.errors);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.submitting);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitting);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","first","MustMatch","i0","RegisterComponent","constructor","formBuilder","route","router","accountService","alertService","ngOnInit","form","group","title","required","firstName","lastName","email","password","minLength","confirmPassword","acceptTerms","requiredTrue","validator","f","controls","onSubmit","submitted","clear","invalid","submitting","register","value","pipe","subscribe","next","success","keepAfterRouteChange","navigate","relativeTo","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\boilerplates\\angularfrontend-main\\src\\app\\account\\register.component.ts","D:\\boilerplates\\angularfrontend-main\\src\\app\\account\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '@app/_services';\nimport { MustMatch } from '@app/_helpers';\n\n@Component({ templateUrl: 'register.component.html' })\nexport class RegisterComponent implements OnInit {\n    form!: FormGroup;\n    submitting = false;\n    submitted = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            title: ['', Validators.required],\n            firstName: ['', Validators.required],\n            lastName: ['', Validators.required],\n            email: ['', [Validators.required, Validators.email]],\n            password: ['', [Validators.required, Validators.minLength(6)]],\n            confirmPassword: ['', Validators.required],\n            acceptTerms: [false, Validators.requiredTrue]\n        }, {\n            validator: MustMatch('password', 'confirmPassword')\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.submitting = true;\n        this.accountService.register(this.form.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    this.alertService.success('Registration successful, please check your email for verification instructions', { keepAfterRouteChange: true });\n                    this.router.navigate(['../login'], { relativeTo: this.route });\n                },\n                error: error => {\n                    this.alertService.error(error);\n                    this.submitting = false;\n                }\n            });\n    }\n}","<h3 class=\"card-header\">Register</h3>\n<div class=\"card-body\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"row\">\n            <div class=\"mb-3 col-2\">\n                <label class=\"form-label\">Title</label>\n                <select formControlName=\"title\" class=\"form-select\" [ngClass]=\"{ 'is-invalid': submitted && f.title.errors }\">\n                    <option value=\"\"></option>\n                    <option value=\"Mr\">Mr</option>\n                    <option value=\"Mrs\">Mrs</option>\n                    <option value=\"Miss\">Miss</option>\n                    <option value=\"Ms\">Ms</option>\n                </select>\n                <div *ngIf=\"submitted && f.title.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.title.errors.required\">Title is required</div>\n                </div>\n            </div>\n            <div class=\"mb-3 col-5\">\n                <label class=\"form-label\">First Name</label>\n                <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n                <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n                </div>\n            </div>\n            <div class=\"mb-3 col-5\">\n                <label class=\"form-label\">Last Name</label>\n                <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n                <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"mb-3\">\n            <label class=\"form-label\">Email</label>\n            <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"mb-3 col\">\n                <label class=\"form-label\">Password</label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                    <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n                </div>\n            </div>\n            <div class=\"mb-3 col\">\n                <label class=\"form-label\">Confirm Password</label>\n                <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\n                <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\n                    <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"mb-3 form-check\">\n            <input type=\"checkbox\" formControlName=\"acceptTerms\" id=\"acceptTerms\" class=\"form-check-input\" [ngClass]=\"{ 'is-invalid': submitted && f.acceptTerms.errors }\" />\n            <label for=\"acceptTerms\" class=\"form-check-label\">Accept Terms & Conditions</label>\n            <div *ngIf=\"submitted && f.acceptTerms.errors\" class=\"invalid-feedback\">Accept Ts & Cs is required</div>\n        </div>\n        <div class=\"mb-3\">\n            <button [disabled]=\"submitting\" class=\"btn btn-primary\">\n                <span *ngIf=\"submitting\" class=\"spinner-border spinner-border-sm me-1\"></span>\n                Register\n            </button>\n            <a routerLink=\"../login\" href=\"\" class=\"btn btn-link\">Cancel</a>\n        </div>\n    </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}