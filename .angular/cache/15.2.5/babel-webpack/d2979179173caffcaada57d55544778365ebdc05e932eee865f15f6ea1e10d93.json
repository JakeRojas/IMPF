{"ast":null,"code":"// custom validator to check that two fields match\nexport function MustMatch(controlName, matchingControlName) {\n  return group => {\n    const control = group.get(controlName);\n    const matchingControl = group.get(matchingControlName);\n    if (!control || !matchingControl) {\n      return null;\n    }\n    // return if another validator has already found an error on the matchingControl\n    if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n      return null;\n    }\n    // set error on matchingControl if validation fails\n    if (control.value !== matchingControl.value) {\n      matchingControl.setErrors({\n        mustMatch: true\n      });\n    } else {\n      matchingControl.setErrors(null);\n    }\n    return null;\n  };\n}","map":{"version":3,"mappings":"AAEA;AACA,OAAM,SAAUA,SAAS,CAACC,WAAmB,EAAEC,mBAA2B;EACtE,OAAQC,KAAsB,IAAI;IAC9B,MAAMC,OAAO,GAAGD,KAAK,CAACE,GAAG,CAACJ,WAAW,CAAC;IACtC,MAAMK,eAAe,GAAGH,KAAK,CAACE,GAAG,CAACH,mBAAmB,CAAC;IAEtD,IAAI,CAACE,OAAO,IAAI,CAACE,eAAe,EAAE;MAC9B,OAAO,IAAI;;IAGf;IACA,IAAIA,eAAe,CAACC,MAAM,IAAI,CAACD,eAAe,CAACC,MAAM,CAACC,SAAS,EAAE;MAC7D,OAAO,IAAI;;IAGf;IACA,IAAIJ,OAAO,CAACK,KAAK,KAAKH,eAAe,CAACG,KAAK,EAAE;MACzCH,eAAe,CAACI,SAAS,CAAC;QAAEF,SAAS,EAAE;MAAI,CAAE,CAAC;KACjD,MAAM;MACHF,eAAe,CAACI,SAAS,CAAC,IAAI,CAAC;;IAEnC,OAAO,IAAI;EACf,CAAC;AACL","names":["MustMatch","controlName","matchingControlName","group","control","get","matchingControl","errors","mustMatch","value","setErrors"],"sourceRoot":"","sources":["D:\\boilerplates\\angularfrontend-main\\src\\app\\_helpers\\must-match.validator.ts"],"sourcesContent":["import { AbstractControl } from '@angular/forms';\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n    return (group: AbstractControl) => {\n        const control = group.get(controlName);\n        const matchingControl = group.get(matchingControlName);\n\n        if (!control || !matchingControl) {\n            return null;\n        }\n\n        // return if another validator has already found an error on the matchingControl\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n            return null;\n        }\n\n        // set error on matchingControl if validation fails\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ mustMatch: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n        return null;\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}