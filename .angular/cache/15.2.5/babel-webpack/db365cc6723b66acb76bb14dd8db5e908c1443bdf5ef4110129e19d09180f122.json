{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { MustMatch } from '@app/_helpers';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nfunction UpdateComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, UpdateComponent_div_17_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.title.errors.required);\n  }\n}\nfunction UpdateComponent_div_22_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"First Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, UpdateComponent_div_22_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.firstName.errors.required);\n  }\n}\nfunction UpdateComponent_div_27_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Last Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, UpdateComponent_div_27_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.lastName.errors.required);\n  }\n}\nfunction UpdateComponent_div_32_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateComponent_div_32_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email must be a valid email address\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, UpdateComponent_div_32_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵtemplate(2, UpdateComponent_div_32_div_2_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.email.errors.email);\n  }\n}\nfunction UpdateComponent_div_42_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateComponent_div_42_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, UpdateComponent_div_42_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵtemplate(2, UpdateComponent_div_42_div_2_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f.password.errors.minlength);\n  }\n}\nfunction UpdateComponent_div_47_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Confirm Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateComponent_div_47_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Passwords must match\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateComponent_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, UpdateComponent_div_47_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵtemplate(2, UpdateComponent_div_47_div_2_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f.confirmPassword.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f.confirmPassword.errors.mustMatch);\n  }\n}\nfunction UpdateComponent_span_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 26);\n  }\n}\nfunction UpdateComponent_span_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 26);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class UpdateComponent {\n  constructor(formBuilder, route, router, accountService, alertService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.accountService = accountService;\n    this.alertService = alertService;\n    this.account = this.accountService.accountValue;\n    this.submitting = false;\n    this.submitted = false;\n    this.deleting = false;\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      title: [this.account.title, Validators.required],\n      firstName: [this.account.firstName, Validators.required],\n      lastName: [this.account.lastName, Validators.required],\n      email: [this.account.email, [Validators.required, Validators.email]],\n      password: ['', [Validators.minLength(6)]],\n      confirmPassword: ['']\n    }, {\n      validator: MustMatch('password', 'confirmPassword')\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // reset alerts on submit\n    this.alertService.clear();\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    this.submitting = true;\n    this.accountService.update(this.account.AccountId, this.form.value).pipe(first()).subscribe({\n      next: () => {\n        this.alertService.success('Update successful', {\n          keepAfterRouteChange: true\n        });\n        this.router.navigate(['../'], {\n          relativeTo: this.route\n        });\n      },\n      error: error => {\n        this.alertService.error(error);\n        this.submitting = false;\n      }\n    });\n  }\n  onDelete() {\n    if (confirm('Are you sure?')) {\n      this.deleting = true;\n      this.accountService.delete(this.account.AccountId).pipe(first()).subscribe(() => {\n        this.alertService.success('Account deleted successfully', {\n          keepAfterRouteChange: true\n        });\n      });\n    }\n  }\n}\nUpdateComponent.ɵfac = function UpdateComponent_Factory(t) {\n  return new (t || UpdateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i3.AlertService));\n};\nUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 57,\n  vars: 29,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"mb-3\", \"col-2\"], [1, \"form-label\"], [\"formControlName\", \"title\", 1, \"form-select\", 3, \"ngClass\"], [\"value\", \"\"], [\"value\", \"Mr\"], [\"value\", \"Mrs\"], [\"value\", \"Miss\"], [\"value\", \"Ms\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"mb-3\", \"col-5\"], [\"type\", \"text\", \"formControlName\", \"firstName\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"text\", \"formControlName\", \"lastName\", 1, \"form-control\", 3, \"ngClass\"], [1, \"mb-3\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [1, \"pt-3\"], [1, \"mb-3\", \"col\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"me-2\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"disabled\", \"click\"], [\"routerLink\", \"../\", \"href\", \"\", 1, \"btn\", \"btn-link\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n  template: function UpdateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Update Profile\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"select\", 4);\n      i0.ɵɵelement(8, \"option\", 5);\n      i0.ɵɵelementStart(9, \"option\", 6);\n      i0.ɵɵtext(10, \"Mr\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"option\", 7);\n      i0.ɵɵtext(12, \"Mrs\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"option\", 8);\n      i0.ɵɵtext(14, \"Miss\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"option\", 9);\n      i0.ɵɵtext(16, \"Ms\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(17, UpdateComponent_div_17_Template, 2, 1, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 11)(19, \"label\", 3);\n      i0.ɵɵtext(20, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 12);\n      i0.ɵɵtemplate(22, UpdateComponent_div_22_Template, 2, 1, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 11)(24, \"label\", 3);\n      i0.ɵɵtext(25, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 13);\n      i0.ɵɵtemplate(27, UpdateComponent_div_27_Template, 2, 1, \"div\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"div\", 14)(29, \"label\", 3);\n      i0.ɵɵtext(30, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(31, \"input\", 15);\n      i0.ɵɵtemplate(32, UpdateComponent_div_32_Template, 3, 2, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"h3\", 16);\n      i0.ɵɵtext(34, \"Change Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"p\");\n      i0.ɵɵtext(36, \"Leave blank to keep the same password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"div\", 1)(38, \"div\", 17)(39, \"label\", 3);\n      i0.ɵɵtext(40, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(41, \"input\", 18);\n      i0.ɵɵtemplate(42, UpdateComponent_div_42_Template, 3, 2, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"div\", 17)(44, \"label\", 3);\n      i0.ɵɵtext(45, \"Confirm Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(46, \"input\", 19);\n      i0.ɵɵtemplate(47, UpdateComponent_div_47_Template, 3, 2, \"div\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(48, \"div\", 14)(49, \"button\", 20);\n      i0.ɵɵtemplate(50, UpdateComponent_span_50_Template, 1, 0, \"span\", 21);\n      i0.ɵɵtext(51, \" Update \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"button\", 22);\n      i0.ɵɵlistener(\"click\", function UpdateComponent_Template_button_click_52_listener() {\n        return ctx.onDelete();\n      });\n      i0.ɵɵtemplate(53, UpdateComponent_span_53_Template, 1, 0, \"span\", 21);\n      i0.ɵɵtext(54, \" Delete \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(55, \"a\", 23);\n      i0.ɵɵtext(56, \"Cancel\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ctx.submitted && ctx.f.title.errors));\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.title.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx.submitted && ctx.f.firstName.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.firstName.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(21, _c0, ctx.submitted && ctx.f.lastName.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.lastName.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(23, _c0, ctx.submitted && ctx.f.email.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.email.errors);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(25, _c0, ctx.submitted && ctx.f.password.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.password.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(27, _c0, ctx.submitted && ctx.f.confirmPassword.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.confirmPassword.errors);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.submitting);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitting);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.deleting);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.deleting);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","first","MustMatch","i0","UpdateComponent","constructor","formBuilder","route","router","accountService","alertService","accountValue","ngOnInit","form","group","title","account","required","firstName","lastName","email","password","minLength","confirmPassword","validator","f","controls","onSubmit","submitted","clear","invalid","submitting","update","AccountId","value","pipe","subscribe","next","success","keepAfterRouteChange","navigate","relativeTo","error","onDelete","confirm","deleting","delete","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\boilerplates\\angularFrontendBoilerplate\\src\\app\\profile\\update.component.ts","D:\\boilerplates\\angularFrontendBoilerplate\\src\\app\\profile\\update.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '@app/_services';\nimport { MustMatch } from '@app/_helpers';\n\n@Component({ templateUrl: 'update.component.html' })\nexport class UpdateComponent implements OnInit {\n    account = this.accountService.accountValue!;\n    form!: FormGroup;\n    submitting = false;\n    submitted = false;\n    deleting = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            title: [this.account.title, Validators.required],\n            firstName: [this.account.firstName, Validators.required],\n            lastName: [this.account.lastName, Validators.required],\n            email: [this.account.email, [Validators.required, Validators.email]],\n            password: ['', [Validators.minLength(6)]],\n            confirmPassword: ['']\n        }, {\n            validator: MustMatch('password', 'confirmPassword')\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.submitting = true;\n        this.accountService.update(this.account.AccountId!, this.form.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    this.alertService.success('Update successful', { keepAfterRouteChange: true });\n                    this.router.navigate(['../'], { relativeTo: this.route });\n                },\n                error: error => {\n                    this.alertService.error(error);\n                    this.submitting = false;\n                }\n            });\n    }\n\n    onDelete() {\n        if (confirm('Are you sure?')) {\n            this.deleting = true;\n            this.accountService.delete(this.account.AccountId!)\n                .pipe(first())\n                .subscribe(() => {\n                    this.alertService.success('Account deleted successfully', { keepAfterRouteChange: true });\n                });\n        }\n    }\n}","<h1>Update Profile</h1>\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"row\">\n        <div class=\"mb-3 col-2\">\n            <label class=\"form-label\">Title</label>\n            <select formControlName=\"title\" class=\"form-select\" [ngClass]=\"{ 'is-invalid': submitted && f.title.errors }\">\n                <option value=\"\"></option>\n                <option value=\"Mr\">Mr</option>\n                <option value=\"Mrs\">Mrs</option>\n                <option value=\"Miss\">Miss</option>\n                <option value=\"Ms\">Ms</option>\n            </select>\n            <div *ngIf=\"submitted && f.title.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.title.errors.required\">Title is required</div>\n            </div>\n        </div>\n        <div class=\"mb-3 col-5\">\n            <label class=\"form-label\">First Name</label>\n            <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n            <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n            </div>\n        </div>\n        <div class=\"mb-3 col-5\">\n            <label class=\"form-label\">Last Name</label>\n            <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n            <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"mb-3\">\n        <label class=\"form-label\">Email</label>\n        <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n        </div>\n    </div>\n    <h3 class=\"pt-3\">Change Password</h3>\n    <p>Leave blank to keep the same password</p>\n    <div class=\"row\">\n        <div class=\"mb-3 col\">\n            <label class=\"form-label\">Password</label>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n            </div>\n        </div>\n        <div class=\"mb-3 col\">\n            <label class=\"form-label\">Confirm Password</label>\n            <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\n            <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\n                <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"mb-3\">\n        <button type=\"submit\" [disabled]=\"submitting\" class=\"btn btn-primary me-2\">\n            <span *ngIf=\"submitting\" class=\"spinner-border spinner-border-sm me-1\"></span>\n            Update\n        </button>\n        <button type=\"button\" (click)=\"onDelete()\" [disabled]=\"deleting\" class=\"btn btn-danger\">\n            <span *ngIf=\"deleting\" class=\"spinner-border spinner-border-sm me-1\"></span>\n            Delete\n        </button>\n        <a routerLink=\"../\" href=\"\" class=\"btn btn-link\">Cancel</a>\n    </div>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}